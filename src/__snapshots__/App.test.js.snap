// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main App Renders Correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForwardRef />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Cookies {
          "HAS_DOCUMENT_COOKIE": true,
          "changeListeners": Array [],
          "cookies": Object {},
        },
        "_currentValue2": Cookies {
          "HAS_DOCUMENT_COOKIE": true,
          "changeListeners": Array [],
          "cookies": Object {},
        },
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Cookies {
            "HAS_DOCUMENT_COOKIE": true,
            "changeListeners": Array [],
            "cookies": Object {},
          },
          "_currentValue2": Cookies {
            "HAS_DOCUMENT_COOKIE": true,
            "changeListeners": Array [],
            "cookies": Object {},
          },
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Message Renders Correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Message
    messages={
      Object {
        "client": "Test-ClientID",
        "message": Object {
          "message": "Test-Message",
          "userName": "Test-Username",
        },
        "messageID": "Test-MessageID",
        "name": "Test-Name",
        "timestamp": "12:00 pm",
      }
    }
    owner={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "row",
      "children": <ForwardRef
        fluid={true}
        owner={true}
        style={
          Object {
            "backgroundColor": "#FF9800",
            "color": "rgba(0, 0, 0, 0.87)",
            "materialColorName": "Orange",
          }
        }
        user="Test-Username"
      >
        <div
          className="container-fluid"
        >
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
            >
              <ForwardRef
                owner={true}
              >
                Test-Username
              </ForwardRef>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
            >
              <ForwardRef
                fluid={true}
                owner={true}
              >
                12:00 pm
              </ForwardRef>
            </Col>
          </Row>
        </div>
        <div
          className="container-fluid"
        >
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
            >
              <ForwardRef
                owner={true}
              >
                Test-Message
              </ForwardRef>
            </Col>
          </Row>
        </div>
      </ForwardRef>,
      "componentClass": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "Test-MessageID",
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="container-fluid"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Username
                </ForwardRef>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  fluid={true}
                  owner={true}
                >
                  12:00 pm
                </ForwardRef>
              </Col>
            </Row>
          </div>,
          <div
            className="container-fluid"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Message
                </ForwardRef>
              </Col>
            </Row>
          </div>,
        ],
        "fluid": true,
        "owner": true,
        "style": Object {
          "backgroundColor": "#FF9800",
          "color": "rgba(0, 0, 0, 0.87)",
          "materialColorName": "Orange",
        },
        "user": "Test-Username",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Username
                </ForwardRef>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  fluid={true}
                  owner={true}
                >
                  12:00 pm
                </ForwardRef>
              </Col>
            </Row>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "row",
              "children": Array [
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    owner={true}
                  >
                    Test-Username
                  </ForwardRef>
                </Col>,
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    fluid={true}
                    owner={true}
                  >
                    12:00 pm
                  </ForwardRef>
                </Col>,
              ],
              "componentClass": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "col",
                  "children": <ForwardRef
                    owner={true}
                  >
                    Test-Username
                  </ForwardRef>,
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Test-Username",
                    "owner": true,
                  },
                  "ref": null,
                  "rendered": "Test-Username",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": true,
                      "rules": Array [
                        "
font-size: 12px;
float: left;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "col",
                  "children": <ForwardRef
                    fluid={true}
                    owner={true}
                  >
                    12:00 pm
                  </ForwardRef>,
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "12:00 pm",
                    "fluid": true,
                    "owner": true,
                  },
                  "ref": null,
                  "rendered": "12:00 pm",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": true,
                      "rules": Array [
                        "
font-size:9px;
float: right;
bottom: 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Message
                </ForwardRef>
              </Col>
            </Row>,
            "className": "container-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "row",
              "children": <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Message
                </ForwardRef>
              </Col>,
              "componentClass": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <ForwardRef
                  owner={true}
                >
                  Test-Message
                </ForwardRef>,
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Test-Message",
                  "owner": true,
                },
                "ref": null,
                "rendered": "Test-Message",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "rules": Array [
                      "
margin-bottom: 10px;
float: left;

",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "rules": Array [
            "
    border: 1px solid #a7a7a7;
    -webkit-border-radius: 4px;
            border-radius: 4px;
    -webkit-box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.2);
            box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.2);
    font-size: 1.2rem;
    line-height: 1.3;
    margin: 3px auto 10px;
    padding: 3px;
    position: relative;
    font-size: 16px;
    min-width: 25%;
    max-width: 65%;
    float: ",
            [Function],
            ";
    overflow: hidden;


",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "row",
        "children": <ForwardRef
          fluid={true}
          owner={true}
          style={
            Object {
              "backgroundColor": "#FF9800",
              "color": "rgba(0, 0, 0, 0.87)",
              "materialColorName": "Orange",
            }
          }
          user="Test-Username"
        >
          <div
            className="container-fluid"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Username
                </ForwardRef>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  fluid={true}
                  owner={true}
                >
                  12:00 pm
                </ForwardRef>
              </Col>
            </Row>
          </div>
          <div
            className="container-fluid"
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
              >
                <ForwardRef
                  owner={true}
                >
                  Test-Message
                </ForwardRef>
              </Col>
            </Row>
          </div>
        </ForwardRef>,
        "componentClass": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "Test-MessageID",
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div
              className="container-fluid"
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    owner={true}
                  >
                    Test-Username
                  </ForwardRef>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    fluid={true}
                    owner={true}
                  >
                    12:00 pm
                  </ForwardRef>
                </Col>
              </Row>
            </div>,
            <div
              className="container-fluid"
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    owner={true}
                  >
                    Test-Message
                  </ForwardRef>
                </Col>
              </Row>
            </div>,
          ],
          "fluid": true,
          "owner": true,
          "style": Object {
            "backgroundColor": "#FF9800",
            "color": "rgba(0, 0, 0, 0.87)",
            "materialColorName": "Orange",
          },
          "user": "Test-Username",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    owner={true}
                  >
                    Test-Username
                  </ForwardRef>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    fluid={true}
                    owner={true}
                  >
                    12:00 pm
                  </ForwardRef>
                </Col>
              </Row>,
              "className": "container-fluid",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                  >
                    <ForwardRef
                      owner={true}
                    >
                      Test-Username
                    </ForwardRef>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                  >
                    <ForwardRef
                      fluid={true}
                      owner={true}
                    >
                      12:00 pm
                    </ForwardRef>
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ForwardRef
                      owner={true}
                    >
                      Test-Username
                    </ForwardRef>,
                    "componentClass": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Test-Username",
                      "owner": true,
                    },
                    "ref": null,
                    "rendered": "Test-Username",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bwzfXH",
                        "isStatic": true,
                        "rules": Array [
                          "
font-size: 12px;
float: left;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bwzfXH",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ForwardRef
                      fluid={true}
                      owner={true}
                    >
                      12:00 pm
                    </ForwardRef>,
                    "componentClass": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "12:00 pm",
                      "fluid": true,
                      "owner": true,
                    },
                    "ref": null,
                    "rendered": "12:00 pm",
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "rules": Array [
                          "
font-size:9px;
float: right;
bottom: 0;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    owner={true}
                  >
                    Test-Message
                  </ForwardRef>
                </Col>
              </Row>,
              "className": "container-fluid",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": <Col
                  bsClass="col"
                  componentClass="div"
                >
                  <ForwardRef
                    owner={true}
                  >
                    Test-Message
                  </ForwardRef>
                </Col>,
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "col",
                  "children": <ForwardRef
                    owner={true}
                  >
                    Test-Message
                  </ForwardRef>,
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Test-Message",
                    "owner": true,
                  },
                  "ref": null,
                  "rendered": "Test-Message",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": true,
                      "rules": Array [
                        "
margin-bottom: 10px;
float: left;

",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "rules": Array [
              "
    border: 1px solid #a7a7a7;
    -webkit-border-radius: 4px;
            border-radius: 4px;
    -webkit-box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.2);
            box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.2);
    font-size: 1.2rem;
    line-height: 1.3;
    margin: 3px auto 10px;
    padding: 3px;
    position: relative;
    font-size: 16px;
    min-width: 25%;
    max-width: 65%;
    float: ",
              [Function],
              ";
    overflow: hidden;


",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
